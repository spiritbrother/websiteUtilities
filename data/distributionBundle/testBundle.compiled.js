#!/usr/bin/env node
// -*- coding: utf-8 -*-
'use strict'
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!*******************!*\
  !*** multi index ***!
  \*******************/
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(/*! test */4);


/***/ },
/* 1 */
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/***/ function(module, exports) {

	eval("module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9tb2R1bGUuanM/YzNjMiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG1vZHVsZSkge1xyXG5cdGlmKCFtb2R1bGUud2VicGFja1BvbHlmaWxsKSB7XHJcblx0XHRtb2R1bGUuZGVwcmVjYXRlID0gZnVuY3Rpb24oKSB7fTtcclxuXHRcdG1vZHVsZS5wYXRocyA9IFtdO1xyXG5cdFx0Ly8gbW9kdWxlLnBhcmVudCA9IHVuZGVmaW5lZCBieSBkZWZhdWx0XHJcblx0XHRtb2R1bGUuY2hpbGRyZW4gPSBbXTtcclxuXHRcdG1vZHVsZS53ZWJwYWNrUG9seWZpbGwgPSAxO1xyXG5cdH1cclxuXHRyZXR1cm4gbW9kdWxlO1xyXG59XHJcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spL2J1aWxkaW4vbW9kdWxlLmpzXG4gKiogbW9kdWxlIGlkID0gMVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 2 */
/*!*************************!*\
  !*** external "jquery" ***!
  \*************************/
/***/ function(module, exports) {

	eval("module.exports = require(\"jquery\");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCBcImpxdWVyeVwiPzBiNzYiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwianF1ZXJ5XCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJqcXVlcnlcIlxuICoqIG1vZHVsZSBpZCA9IDJcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 3 */
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(module) {// #!/usr/bin/env node\n// -*- coding: utf-8 -*-\n/** @module jQuery-website */'use strict'; /* !\n    region header\n    [Project page](http://torben.website/jQuery-website)\n\n    Copyright Torben Sickert (info[\"~at~\"]torben.website) 16.12.2012\n\n    License\n    -------\n\n    This library written by Torben Sickert stand under a creative commons\n    naming 3.0 unported license.\n    See http://creativecommons.org/licenses/by/3.0/deed.de\n    endregion\n*/ // region imports\nexports.__esModule=true;var _jquery=__webpack_require__(/*! jquery */ 2);var _jquery2=_interopRequireDefault(_jquery);__webpack_require__(/*! jQuery-tools */ 9);var _jQueryLang=__webpack_require__(/*! jQuery-lang */ 6);var _jQueryLang2=_interopRequireDefault(_jQueryLang);__webpack_require__(/*! jQuery-scrollTo */ 7);__webpack_require__(/*! jQuery-spin */ 8);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;} // endregion\n/* eslint-disable no-duplicate-imports */ /* eslint-enable no-duplicate-imports */ // endregion\n// region types\nvar context=function(){if(_jquery2.default.type(window)==='undefined'){if(_jquery2.default.type(global)==='undefined')return _jquery2.default.type(module)==='undefined'?{}:module;return global;}return window;}();if(!('document' in context)&&'context' in _jquery2.default)context.document=_jquery2.default.context; // region plugins/classes\n/**\n * This plugin holds all needed methods to extend a whole website.###\n * @extends jQuery-tools:Tools\n * @property static:_name - Defines this class name to allow retrieving them\n * after name mangling.\n * @property _options - Options extended by the options given to the\n * initializer method.\n * @property _parentOptions - Saves default options to extend by options given\n * to the initializer method.\n * @property _parentOptions.domNodeSelectorPrefix {string} - Selector prefix\n * for all nodes to take into account.\n * @property _parantOptions.onViewportMovesToTop {Function} - Callback to\n * trigger when viewport arrives at top.\n * @property _parantOptions.onViewportMovesAwayFromTop {Function} - Callback to\n * trigger when viewport moves away from top.\n * @property _parentOptions.onChangeToLargeMode {Function} - Callback to\n * trigger if media query mode changes to large mode.\n * @property _parentOptions.onChangeToMediumMode {Function} - Callback to\n * trigger if media query mode changes to medium mode.\n * @property _parentOptions.onChangeToSmallMode {Function} - Callback to\n * trigger if media query mode changes to small mode.\n * @property _parentOptions.onChangeToExtraSmallMode {Function} - Callback to\n * trigger if media query mode changes to extra small mode.\n * @property _parentOptions.onChangeMediaQueryMode {Function} - Callback to\n * trigger if media query mode changes.\n * @property _parentOptions.onSwitchSection {Function} - Callback to trigger\n * if current section switches.\n * @property _parentOptions.onStartUpAnimationComplete {Function} - Callback to\n * trigger if all start up animations has finished.\n * @property _parentOptions.knownScrollEventNames {string} - Saves all known\n * scroll events in a space separated string.\n * @property _parentOption.switchToManualScrollingIndicator {Function} -\n * Indicator function to stop currently running scroll animations to let the\n * user get control of current scrolling behavior. Given callback gets an event\n * object. If the function returns \"true\" current animated scrolls will be\n * stopped.\n * @property _parentOptions.additionalPageLoadingTimeInMilliseconds {Number} -\n * Additional time to wait until page will be indicated as loaded.\n * @property _parentOptions.trackingCode - Analytic tracking code to collect\n * user behavior data.\n * @property _parentOptions.mediaQueryClassNameIndicator\n * {Array.Array.<string>} - Mapping of media query class indicator names to\n * internal event names.\n * @property _parentOptions.domNode {Object.<string, string>} - Mapping of\n * dom node descriptions to their corresponding selectors.\n * @property _parentOptions.domNode.mediaQueryIndicator {string} - Selector\n * for indicator dom node to use to trigger current media query mode.\n * @property _parentOptions.domNode.top {string} - Selector to indicate that\n * viewport is currently on top.\n * @property _parentOptions.domNode.scrollToTopButton {string} - Selector for\n * starting an animated scroll to top.\n * @property _parentOption.domNode.startUpAnimationClassPrefix {string} -\n * Class name selector prefix for all dom nodes to appear during start up\n * animations.\n * @property _parentOptions.domNode.windowLoadingCover {string} - Selector\n * to the full window loading cover dom node.\n * @property _parentOptions.domNode.windowLoadingSpinner {string} - Selector\n * to the window loading spinner (on top of the window loading cover).\n * @property _parentOption.startUpShowAnimation {Object} - Options for startup\n * show in animation.\n * @property _parentOption.startUpHide {Object} - Options for initially hiding\n * dom nodes showing on startup later.\n * @property _parentOptions.windowLoadingCoverHideAnimation {Object} - Options\n * for startup loading cover hide animation.\n * @property _parentOptions.startUpAnimationElementDelayInMiliseconds {number}\n * - Delay between two startup animated dom nodes in order.\n * @property _parentOptions.windowLoadingSpinner {Object} - Options for the\n * window loading cover spinner.\n * @property _parentOptions.activateLanguageSupport {boolean} - Indicates\n * weather language support should be used or not.\n * @property _parentOptions.language {Object} - Options for client side\n * internationalisation handler.\n * @property _parentOptions.scrollTop {Object} - Options for automated scroll\n * top animation.\n * @property _parentOptions.domain {string} - Sets current domain name. If\n * \"auto\" is given it will be determined automatically.\n * @property startUpAnimationIsComplete - Indicates weather start up animations\n * has finished.\n * @property currentSectionName - Saves current section hash name.\n * @property viewportIsOnTop - Indicates weather current viewport is on top.\n * @property currentMediaQueryMode - Saves current media query status depending\n * on available space in current browser window.\n * @property languageHandler - Reference to the language switcher instance.\n * @property _analyticsCode - Saves analytics code snippets to use for\n * referenced situations.\n * @property _analyticsCode.initial {string} - Initial string to use for\n * analyses on.\n * @property _analyticsCode.sectionSwitch {string} - Code to execute on each\n * section switch. Current page is available via \"{1}\" string formatting.\n * @property _analyticsCod.event {string} - Code to execute on each fired\n * event.\n */var Website=function(_$$Tools$class){_inherits(Website,_$$Tools$class);function Website(){_classCallCheck(this,Website);return _possibleConstructorReturn(this,_$$Tools$class.apply(this,arguments));} // endregion\n// region public methods\n// / region special\n/**\n     * Initializes the interactive web application.\n     * @param options - An options object.\n     * @param parentOptions - A default options object.\n     * @param startUpAnimationIsComplete - If set to \"true\", no start up\n     * animation will be performed.\n     * @param currentSectionName - Initial section name to use.\n     * @param viewportIsOnTop - Indicates weather viewport is on top initially.\n     * @param currentMediaQueryMode - Initial media query mode to use (until\n     * first window resize event could trigger a change).\n     * @param languageHandler - Language handler instance to use.\n     * @param analyticsCode - Analytic code snippet to use.\n     * @returns Returns the current instance.\n     */ // region static properties\nWebsite.prototype.initialize=function initialize(){var options=arguments.length<=0||arguments[0]===undefined?{}:arguments[0];var parentOptions=arguments.length<=1||arguments[1]===undefined?{domNodeSelectorPrefix:'body.{1}',onViewportMovesToTop:_jquery2.default.noop(),onViewportMovesAwayFromTop:_jquery2.default.noop(),onChangeToLargeMode:_jquery2.default.noop(),onChangeToMediumMode:_jquery2.default.noop(),onChangeToSmallMode:_jquery2.default.noop(),onChangeToExtraSmallMode:_jquery2.default.noop(),onChangeMediaQueryMode:_jquery2.default.noop(),onSwitchSection:_jquery2.default.noop(),onStartUpAnimationComplete:_jquery2.default.noop(),knownScrollEventNames:'scroll mousedown wheel DOMMouseScroll mousewheel keyup '+'touchmove',switchToManualScrollingIndicator:function switchToManualScrollingIndicator(event){return event.which>0||event.type==='mousedown'||event.type==='mousewheel'||event.type==='touchmove';},additionalPageLoadingTimeInMilliseconds:0,trackingCode:null,mediaQueryClassNameIndicator:[['extraSmall','xs'],['small','sm'],['medium','md'],['large','lg']],domNode:{mediaQueryIndicator:'<div class=\"media-query-indicator\">',top:'> div.navbar-wrapper',scrollToTopButton:'a[href=\"#top\"]',startUpAnimationClassPrefix:'.website-start-up-animation-number-',windowLoadingCover:'div.website-window-loading-cover',windowLoadingSpinner:'div.website-window-loading-cover > div'},startUpShowAnimation:[{opacity:1},{}],startUpHide:{opacity:0},windowLoadingCoverHideAnimation:[{opacity:0},{}],startUpAnimationElementDelayInMiliseconds:100,windowLoadingSpinner:{lines:9, // The number of lines to draw\nlength:23, // The length of each line\nwidth:11, // The line thickness\nradius:40, // The radius of the inner circle\ncorners:1, // Corner roundness (0..1)\nrotate:75, // The rotation offset\ncolor:'#000', // #rgb or #rrggbb\nspeed:1.1, // Rounds per second\ntrail:58, // Afterglow percentage\nshadow:false, // Whether to render a shadow\nhwaccel:false, // Whether to use hardware acceleration\nclassName:'spinner', // CSS class to assign to the spinner\nzIndex:2e9, // The z-index (defaults to 2000000000)\ntop:'auto', // Top position relative to parent in px\nleft:'auto' // Left position relative to parent in px\n},activateLanguageSupport:true,language:{},scrollToTop:{inLinearTime:true,options:{duration:'normal'},button:{slideDistanceInPixel:30,showAnimation:{duration:'normal'},hideAnimation:{duration:'normal'}}},windowLoadedTimeoutAfterDocumentLoadedInMilliseconds:3000,domain:'auto'}:arguments[1];var startUpAnimationIsComplete=arguments.length<=2||arguments[2]===undefined?false:arguments[2];var currentSectionName=arguments.length<=3||arguments[3]===undefined?null:arguments[3];var viewportIsOnTop=arguments.length<=4||arguments[4]===undefined?false:arguments[4];var currentMediaQueryMode=arguments.length<=5||arguments[5]===undefined?'':arguments[5];var _this2=this;var languageHandler=arguments.length<=6||arguments[6]===undefined?null:arguments[6];var analyticsCode=arguments.length<=7||arguments[7]===undefined?{initial:'\\n                (function(i,s,o,g,r,a,m){i[\\'GoogleAnalyticsObject\\']=r;i[r]='+'i[r]||function(){'+'(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*'+'new window.Date();'+'a=s.createElement(o),m=s.getElementsByTagName(o)[0];'+'a.async=1;a.src=g;'+'m.parentNode.insertBefore(a,m)})('+\"window,document,'script','//www.google-analytics.com/\"+\"analytics.js','ga');\"+'window.ga(\\'create\\', \\'{1}\\', \\'{2}\\');\\n                window.ga(\\'set\\', \\'anonymizeIp\\', true);\\n                window.ga(\\'send\\', \\'pageview\\', {page: \\'{3}\\'});\\n            ',sectionSwitch:\"window.ga('send', 'pageview', {page: '{1}'});\",event:'window.ga(\\n                \\'send\\', \\'event\\', eventCategory, eventAction, eventLabel,\\n                eventValue, eventData);\\n            '}:arguments[7];this._parentOptions=parentOptions;this.startUpAnimationIsComplete=startUpAnimationIsComplete;this.viewportIsOnTop=viewportIsOnTop;this.currentMediaQueryMode=currentMediaQueryMode;this.languageHandler=languageHandler;this._analyticsCode=analyticsCode;if(currentSectionName)this.currentSectionName=currentSectionName;else if('location' in context&&context.location.hash)this.currentSectionName=context.location.hash.substring('#'.length);else this.currenSectionName='home'; // Wrap event methods with debounceing handler.\nthis._onViewportMovesToTop=this.constructor.debounce(this.getMethod(this._onViewportMovesToTop));this._onViewportMovesAwayFromTop=this.constructor.debounce(this.getMethod(this._onViewportMovesAwayFromTop));this._options=_jquery2.default.extend(true,{},this._parentOptions,this._options);_$$Tools$class.prototype.initialize.call(this,options);this.$domNodes=this.grabDomNode(this._options.domNode);this.disableScrolling()._options.windowLoadingCoverHideAnimation[1].always=this.getMethod(this._handleStartUpEffects);this.$domNodes.windowLoadingSpinner.spin(this._options.windowLoadingSpinner);this._bindScrollEvents().$domNodes.parent.show();if('window' in this.$domNodes){(function(){var onLoaded=function onLoaded(){if(!_this2.windowLoaded){_this2.windowLoaded=true;_this2._removeLoadingCover();}};(0,_jquery2.default)(function(){return setTimeout(onLoaded,_this2._options.windowLoadedTimeoutAfterDocumentLoadedInMilliseconds);});_this2.on(_this2.$domNodes.window,'load',onLoaded);})();}this._addNavigationEvents()._addMediaQueryChangeEvents()._triggerWindowResizeEvents()._handleAnalyticsInitialisation();if(!this._options.language.logging)this._options.language.logging=this._options.logging;if(this._options.activateLanguageSupport&&!this.languageHandler)this.languageHandler=_jquery2.default.Lang(this._options.language);return this;}; // endregion\n/**\n     * This method disables scrolling on the given web view.\n     * @returns Returns the current instance.\n     */ // endregion\n// region dynamic properties\nWebsite.prototype.disableScrolling=function disableScrolling(){this.$domNodes.parent.addClass('disable-scrolling').on('touchmove',function(event){return event.preventDefault();});return this;}; /**\n     * This method disables scrolling on the given web view.\n     * @returns Returns the current instance.\n     */Website.prototype.enableScrolling=function enableScrolling(){this.off(this.$domNodes.parent.removeClass('disable-scrolling','touchmove'));return this;}; /**\n     * Triggers an analytics event. All given arguments are forwarded to\n     * configured analytics event code to defined their environment variables.\n     * @returns Returns the current instance.\n     */Website.prototype.triggerAnalyticsEvent=function triggerAnalyticsEvent(){if(this._options.trackingCode&&this._options.trackingCode!=='__none__'&&'location' in context&&context.location.hostname!=='localhost'){this.debug(\"Run analytics code: \\\"#{this._analyticsCode.event}\\\" with \"+'arguments:');this.debug(arguments);try{new Function('eventCategory','eventAction','eventLabel','eventData','eventValue',this._analyticsCode.event).apply(this,arguments);}catch(exception){this.warn('Problem in google analytics event code snippet: {1}',exception);}}return this;}; // endregion\n// region protected methods\n// / region event\n/**\n     * This method triggers if the viewport moves to top.\n     * @returns Returns the current instance.\n     */Website.prototype._onViewportMovesToTop=function _onViewportMovesToTop(){var _this3=this;if(this.$domNodes.scrollToTopButton.css('visibility')==='hidden')this.$domNodes.scrollToTopButton.css('opacity',0);else {this._options.scrollToTop.button.hideAnimation.always=function(){return _this3.$domNodes.scrollToTopButton.css({bottom:'-='+_this3._options.scrollToTop.button.slideDistanceInPixel,display:'none'});};this.$domNodes.scrollToTopButton.finish().animate({bottom:'+='+this._options.scrollToTop.button.slideDistanceInPixel,opacity:0},this._options.scrollToTop.button.hideAnimation);}return this;}; /**\n     * This method triggers if the viewport moves away from top.\n     * @returns Returns the current instance.\n     */Website.prototype._onViewportMovesAwayFromTop=function _onViewportMovesAwayFromTop(){if(this.$domNodes.scrollToTopButton.css('visibility')==='hidden')this.$domNodes.scrollToTopButton.css('opacity',1);else this.$domNodes.scrollToTopButton.finish().css({bottom:'+='+this._options.scrollToTop.button.slideDistanceInPixel,display:'block',opacity:0}).animate({bottom:'-='+this._options.scrollToTop.button.slideDistanceInPixel,queue:false,opacity:1},this._options.scrollToTop.button.showAnimation);return this;}; /* eslint-disable no-unused-vars */ /**\n     * This method triggers if the responsive design switches to another mode.\n     * @param oldMode - Saves the previous mode.\n     * @param newMode - Saves the new mode.\n     * @returns Returns the current instance.\n     */Website.prototype._onChangeMediaQueryMode=function _onChangeMediaQueryMode(oldMode,newMode){return this;}; /**\n     * This method triggers if the responsive design switches to large mode.\n     * @param oldMode - Saves the previous mode.\n     * @param newMode - Saves the new mode.\n     * @returns Returns the current instance.\n     */Website.prototype._onChangeToLargeMode=function _onChangeToLargeMode(oldMode,newMode){return this;}; /**\n     * This method triggers if the responsive design switches to medium mode.\n     * @param oldMode - Saves the previous mode.\n     * @param newMode - Saves the new mode.\n     * @returns Returns the current instance.\n     */Website.prototype._onChangeToMediumMode=function _onChangeToMediumMode(oldMode,newMode){return this;}; /**\n     * This method triggers if the responsive design switches to small mode.\n     * @param oldMode - Saves the previous mode.\n     * @param newMode - Saves the new mode.\n     * @returns Returns the current instance.\n     */Website.prototype._onChangeToSmallMode=function _onChangeToSmallMode(oldMode,newMode){return this;}; /**\n     * This method triggers if the responsive design switches to extra small\n     * mode.\n     * @param oldMode - Saves the previous mode.\n     * @param newMode - Saves the new mode.\n     * @returns Returns the current instance.\n     */Website.prototype._onChangeToExtraSmallMode=function _onChangeToExtraSmallMode(oldMode,newMode){return this;}; /* eslint-enable no-unused-vars */ /**\n     * This method triggers if we change the current section.\n     * @param sectionName - Contains the new section name.\n     * @returns Returns the current instance.\n     */Website.prototype._onSwitchSection=function _onSwitchSection(sectionName){if(this._options.trackingCode&&this._options.trackingCode!=='__none__'&&'location' in context&&context.location.hostname!=='localhost'&&this.currentSectionName!==sectionName){this.currentSectionName=sectionName;this.debug('Run analytics code: \"'+this._analyticsCode.sectionSwitch+'\"',this.currentSectionName);try{new Function(this.constructor.stringFormat(this._analyticsCode.sectionSwitch,this.currentSectionName))();}catch(exception){this.warn('Problem in analytics section switch code snippet: {1}',exception);}}return this;}; /**\n     * This method is complete if last startup animation was initialized.\n     * @returns Returns the current instance.\n     */Website.prototype._onStartUpAnimationComplete=function _onStartUpAnimationComplete(){this.startUpAnimationIsComplete=true;return this;}; // endregion\n// / region helper\n/**\n     * This method adds triggers for responsive design switches.\n     * @returns Returns the current instance.\n     */Website.prototype._addMediaQueryChangeEvents=function _addMediaQueryChangeEvents(){this.on(this.$domNodes.window,'resize',this.getMethod(this._triggerWindowResizeEvents));return this;}; /**\n     * This method triggers if the responsive design switches its mode.\n     * @returns Returns the current instance.\n     */Website.prototype._triggerWindowResizeEvents=function _triggerWindowResizeEvents(){var _this4=this,_arguments=arguments;_jquery2.default.each(this._options.mediaQueryClassNameIndicator,function(index,classNameMapping){_this4.$domNodes.mediaQueryIndicator.prependTo(_this4.$domNodes.parent).addClass('hidden-'+classNameMapping[1]);if(_this4.$domNodes.mediaQueryIndicator.is(':hidden')&&classNameMapping[0]!==_this4.currentMediaQueryMode){_this4.fireEvent.apply(_this4,['changeMediaQueryMode',false,_this4,_this4.currentMediaQueryMode,classNameMapping[0]].concat(_this4.constructor.argumentsObjectToArray(_arguments)));_this4.fireEvent.apply(_this4,[_this4.constructor.stringFormat('changeTo{1}Mode',_this4.constructor.stringCapitalize(classNameMapping[0])),false,_this4,_this4.currentMediaQueryMode,classNameMapping[0]].concat(_this4.constructor.argumentsObjectToArray(_arguments)));_this4.currentMediaQueryMode=classNameMapping[0];}_this4.$domNodes.mediaQueryIndicator.removeClass('hidden-'+classNameMapping[1]);});return this;}; /**\n     * This method triggers if view port arrives at special areas.\n     * @returns Returns the current instance.\n     */Website.prototype._bindScrollEvents=function _bindScrollEvents(){var _this5=this,_arguments2=arguments; // Stop automatic scrolling if the user wants to scroll manually.\nif(!('window' in this.$domNodes))return this;var $scrollTarget=(0,_jquery2.default)('body, html').add(this.$domNodes.window);$scrollTarget.on(this._options.knownScrollEventNames,function(event){if(_this5._options.switchToManualScrollingIndicator(event))$scrollTarget.stop(true);});this.on(this.$domNodes.window,'scroll',function(){if(_this5.$domNodes.window.scrollTop()){if(_this5.viewportIsOnTop){_this5.viewportIsOnTop=false;_this5.fireEvent.apply(_this5,['viewportMovesAwayFromTop',false,_this5].concat(_this5.constructor.argumentsObjectToArray(_arguments2)));}}else if(!_this5.viewportIsOnTop){_this5.viewportIsOnTop=true;_this5.fireEvent.apply(_this5,['viewportMovesToTop',false,_this5].concat(_this5.constructor.argumentsObjectToArray(_arguments2)));}});if(this.$domNodes.window.scrollTop()){this.viewportIsOnTop=false;this.fireEvent.apply(this,['viewportMovesAwayFromTop',false,this].concat(this.constructor.argumentsObjectToArray(arguments)));}else {this.viewportIsOnTop=true;this.fireEvent.apply(this,['viewportMovesToTop',false,this].concat(this.constructor.argumentsObjectToArray(arguments)));}return this;}; /**\n     * This method triggers after window is loaded.\n     * @returns Returns the current instance.\n     */Website.prototype._removeLoadingCover=function _removeLoadingCover(){var _this6=this;setTimeout(function(){ // Hide startup animation dom nodes to show them step by step.\n(0,_jquery2.default)(_this6.constructor.stringFormat('[class^=\"{1}\"], [class*=\" {1}\"]',_this6.sliceDomNodeSelectorPrefix(_this6._options.domNode.startUpAnimationClassPrefix).substr(1))).css(_this6._options.startUpHide);if(_this6.$domNodes.windowLoadingCover.length)_this6.enableScrolling().$domNodes.windowLoadingCover.animate.apply(_this6.$domNodes.windowLoadingCover,_this6._options.windowLoadingCoverHideAnimation);else _this6._options.windowLoadingCoverHideAnimation[1].always();},this._options.additionalPageLoadingTimeInMilliseconds);return this;}; /**\n     * This method handles the given start up effect step.\n     * @param elementNumber - The current start up step.\n     * @returns Returns the current instance.\n     */Website.prototype._handleStartUpEffects=function _handleStartUpEffects(elementNumber){var _this7=this; // Stop and delete spinner instance.\nthis.$domNodes.windowLoadingCover.hide();this.$domNodes.windowLoadingSpinner.spin(false);if(!_jquery2.default.isNumeric(elementNumber))elementNumber=1;if((0,_jquery2.default)(this.constructor.stringFormat('[class^=\"{1}\"], [class*=\" {1}\"]',this.sliceDomNodeSelectorPrefix(this._options.domNode.startUpAnimationClassPrefix).substr(1))).length)setTimeout(function(){var lastElementTriggered=false;_this7._options.startUpShowAnimation[1].always=function(){if(lastElementTriggered)_this7.fireEvent('startUpAnimationComplete');};var $domNode=(0,_jquery2.default)(_this7._options.domNode.startUpAnimationClassPrefix+elementNumber);$domNode.animate.apply($domNode,_this7._options.startUpShowAnimation);if((0,_jquery2.default)(_this7._options.domNode.startUpAnimationClassPrefix+(elementNumber+1)).length)_this7._handleStartUpEffects(elementNumber+1);else lastElementTriggered=true;},this._options.startUpAnimationElementDelayInMiliseconds);else this.fireEvent('startUpAnimationComplete');return this;}; /**\n     * This method adds triggers to switch section.\n     * @returns Returns the current instance.\n     */Website.prototype._addNavigationEvents=function _addNavigationEvents(){var _this8=this;if('addEventListener' in context)context.addEventListener('hashchange',function(){if(_this8.startUpAnimationIsComplete)_this8.fireEvent('switchSection',false,_this8,location.hash.substring('#'.length));},false);return this._handleScrollToTopButton();}; /**\n     * Adds trigger to scroll top buttons.\n     * @returns Returns the current instance.\n     */Website.prototype._handleScrollToTopButton=function _handleScrollToTopButton(){var _this9=this;this.on(this.$domNodes.scrollToTopButton,'click',function(event){event.preventDefault();_this9._scrollToTop();});return this;}; /**\n     * Scrolls to top of page. Runs the given function after viewport arrives.\n     * @param onAfter - Callback to call after effect has finished.\n     * @returns Returns the current instance.\n     */Website.prototype._scrollToTop=function _scrollToTop(){var onAfter=arguments.length<=0||arguments[0]===undefined?_jquery2.default.noop():arguments[0];if(!('document' in context))return this;this._options.scrollToTop.options.onAfter=onAfter; /*\n            NOTE: This is a workaround to avoid a bug in \"jQuery.scrollTo()\"\n            expecting this property exists.\n        */Object.defineProperty(context.document,'body',{value:(0,_jquery2.default)('body')[0]});if(this._options.scrollToTop.inLinearTime){var distanceToTopInPixel=this.$domNodes.window.scrollTop(); // Scroll four times faster as we have distance to top.\nthis._options.scrollToTop.options.duration=distanceToTopInPixel/4;this.$domNodes.window.scrollTo({top:'-='+distanceToTopInPixel,left:'+=0'},this._options.scrollToTop.options);}else (0,_jquery2.default)(window).scrollTo({top:0,left:0},this._options.scrollToTop.options);return this;}; /**\n     * Executes the page tracking code.\n     * @returns Returns the current instance.\n     */Website.prototype._handleAnalyticsInitialisation=function _handleAnalyticsInitialisation(){var _this10=this;if(this._options.trackingCode&&this._options.trackingCode!=='__none__'&&'location' in context&&context.location.hostname!=='localhost'){this.debug('Run analytics code: \"'+this._analyticsCode.initial+'\"',this._options.trackingCode,this._options.domain,this.currentSectionName);try{new Function(this.constructor.stringFormat(this._analyticsCode.initial,this._options.trackingCode,this._options.domain,this.currentSectionName))();}catch(exception){this.warn('Problem in analytics initial code snippet: {1}',exception);}this.on(this.$domNodes.parent.find('a, button'),'click',function(event){var $domNode=(0,_jquery2.default)(event.target);_this10.triggerAnalyticsEvent(_this10.currentSectionName,'click',$domNode.text(),event.data||{},$domNode.attr('website-analytics-value')||1);});}return this;}; // / endregion\n// endregion\nreturn Website;}(_jquery2.default.Tools.class); // endregion\nWebsite._name='Website';_jquery2.default.Website=function(){return _jquery2.default.Tools().controller(Website,arguments);};_jquery2.default.Website.class=Website; /** The jQuery-website plugin class. */exports.default=Website; // region vim modline\n// vim: set tabstop=4 shiftwidth=4 expandtab:\n// vim: foldmethod=marker foldmarker=region,endregion:\n// endregion\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/webpack/buildin/module.js */ 1)(module)))\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 4 */
/*!*****************!*\
  !*** ./test.js ***!
  \*****************/
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(module) {// #!/usr/bin/env node\n// -*- coding: utf-8 -*-\n'use strict'; /* !\n    region header\n    Copyright Torben Sickert (info[\"~at~\"]torben.website) 16.12.2012\n\n    License\n    -------\n\n    This library written by Torben Sickert stand under a creative commons\n    naming 3.0 unported license.\n    See http://creativecommons.org/licenses/by/3.0/deed.de\n    endregion\n*/ // region imports\nvar _typeof=typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol?\"symbol\":typeof obj;};var _browserAPI=__webpack_require__(/*! webOptimizer/browserAPI */ 5);var _browserAPI2=_interopRequireDefault(_browserAPI);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};} // endregion\n// endregion\n// region declaration\n// endregion\n// region types\nvar qunit= true?__webpack_require__(/*! qunit-cli */ 11):require('qunitjs');(0,_browserAPI2.default)(function(window,alreadyLoaded){ /*\n        NOTE: We have to define window globally before jQuery is loaded to\n        ensure that all jquery instances share the same window object.\n    */if(typeof global!=='undefined'&&global!==window){global.window=window;for(var key in window){if(window.hasOwnProperty(key)&&!global.hasOwnProperty(key))global[key]=window[key];}}var $=__webpack_require__(/*! jquery */ 2);$.context=window.document;__webpack_require__(/*! ./index */ 3);if(true)qunit.load();else if(!alreadyLoaded)qunit.start(); // region tests\n// / region mock-up\nvar website=$.Website(); // / endregion\n// / region public methods\n// // region special\nqunit.test('initialize',function(){return qunit.ok(website);}); // // endregion\nqunit.test('disableScrolling|enableScrolling',function(){qunit.strictEqual(website.disableScrolling(),website);qunit.strictEqual(website.enableScrolling(),website);}); // / endregion\n// / region protected methods\n// // region event\nqunit.test('_onViewportMovesToTop',function(){website._onViewportMovesToTop(); // NOTE: Returns timeout id because of debounceing.\nqunit.strictEqual(_typeof(website._onViewportMovesToTop()),_typeof(setTimeout(function(){},0)));});qunit.test('_onViewportMovesAwayFromTop',function(){website._onViewportMovesAwayFromTop(); // NOTE: Returns timeout id because of debounceing.\nqunit.strictEqual(_typeof(website._onViewportMovesAwayFromTop()),_typeof(setTimeout(function(){},0)));});qunit.test('_onChangeMediaQueryMode',function(){return qunit.strictEqual(website._onChangeMediaQueryMode('old','new'),website);});qunit.test('_onChangeToLargeMode',function(){return qunit.strictEqual(website._onChangeToLargeMode('old','new'),website);});qunit.test('_onChangeToMediumMode',function(){return qunit.strictEqual(website._onChangeToMediumMode('old','new'),website);});qunit.test('_onChangeToSmallMode',function(){return qunit.strictEqual(website._onChangeToSmallMode('old','new'),website);});qunit.test('_onChangeToExtraSmallMode',function(){return qunit.strictEqual(website._onChangeToExtraSmallMode('old','new'),website);});qunit.test('_onSwitchSection',function(){return qunit.strictEqual(website._onSwitchSection('newSectionName'),website);});qunit.test('_onStartUpAnimationComplete',function(){return qunit.strictEqual(website._onStartUpAnimationComplete(),website);}); // // endregion\n// // region helper\nqunit.test('_addMediaQueryChangeEvents',function(){return qunit.strictEqual(website._addMediaQueryChangeEvents(),website);});qunit.test('_triggerWindowResizeEvents',function(){return qunit.strictEqual(website._triggerWindowResizeEvents(),website);});qunit.test('_bindScrollEvents',function(){return qunit.strictEqual(website._bindScrollEvents(),website);});qunit.test('_removeLoadingCover',function(){return qunit.strictEqual(website._removeLoadingCover(),website);});qunit.test('_handleStartUpEffects',function(){return qunit.strictEqual(website._handleStartUpEffects(10),website);});qunit.test('_addNavigationEvents',function(){return qunit.strictEqual(website._addNavigationEvents(),website);});qunit.test('_handleScrollToTopButton',function(){return qunit.strictEqual(website._handleScrollToTopButton(),website);});qunit.test('_scrollToTop',function(){return qunit.strictEqual(website._scrollToTop(),website);});qunit.test('_handleAnalyticsInitialisation',function(){return qunit.strictEqual(website._handleAnalyticsInitialisation(),website);}); // // endregion\n// / endregion\n// endregion\n// region hot module replacement handler\nif(( false?'undefined':_typeof(module))==='object'&&'hot' in module&&module.hot){module.hot.accept(); // IgnoreTypeCheck\nmodule.hot.dispose(function(){ /*\n                NOTE: We have to delay status indicator reset because qunits\n                status updates are delayed as well.\n            */setTimeout(function(){if(!$('.fail').length){window.document.title='✔ test';$('#qunit-banner').removeClass('qunit-fail').addClass('qunit-pass');}},0);$('#qunit-tests').html('');console.clear();});} // endregion\n}); // region vim modline\n// vim: set tabstop=4 shiftwidth=4 expandtab:\n// vim: foldmethod=marker foldmarker=region,endregion:\n// endregion\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/webpack/buildin/module.js */ 1)(module)))\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy90ZXN0LmpzPzFkZDIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQGZsb3dcbi8vICMhL3Vzci9iaW4vZW52IG5vZGVcbi8vIC0qLSBjb2Rpbmc6IHV0Zi04IC0qLVxuJ3VzZSBzdHJpY3QnXG4vKiAhXG4gICAgcmVnaW9uIGhlYWRlclxuICAgIENvcHlyaWdodCBUb3JiZW4gU2lja2VydCAoaW5mb1tcIn5hdH5cIl10b3JiZW4ud2Vic2l0ZSkgMTYuMTIuMjAxMlxuXG4gICAgTGljZW5zZVxuICAgIC0tLS0tLS1cblxuICAgIFRoaXMgbGlicmFyeSB3cml0dGVuIGJ5IFRvcmJlbiBTaWNrZXJ0IHN0YW5kIHVuZGVyIGEgY3JlYXRpdmUgY29tbW9uc1xuICAgIG5hbWluZyAzLjAgdW5wb3J0ZWQgbGljZW5zZS5cbiAgICBTZWUgaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnkvMy4wL2RlZWQuZGVcbiAgICBlbmRyZWdpb25cbiovXG4vLyByZWdpb24gaW1wb3J0c1xuaW1wb3J0IGJyb3dzZXJBUEkgZnJvbSAnd2ViT3B0aW1pemVyL2Jyb3dzZXJBUEknXG5pbXBvcnQgdHlwZSB7V2luZG93fSBmcm9tICd3ZWJPcHRpbWl6ZXIvdHlwZSdcbmltcG9ydCB0eXBlIFdlYnNpdGUgZnJvbSAnLi9pbmRleCdcbi8vIGVuZHJlZ2lvblxuLy8gcmVnaW9uIGRlY2xhcmF0aW9uXG5kZWNsYXJlIHZhciBUQVJHRVQ6c3RyaW5nXG4vLyBlbmRyZWdpb25cbi8vIHJlZ2lvbiB0eXBlc1xudHlwZSBKUXVlcnlGdW5jdGlvbiA9IChvYmplY3Q6YW55KSA9PiBPYmplY3Rcbi8vIGVuZHJlZ2lvblxuY29uc3QgcXVuaXQ6T2JqZWN0ID0gKFRBUkdFVCA9PT0gJ25vZGUnKSA/IHJlcXVpcmUoJ3F1bml0LWNsaScpIDogcmVxdWlyZShcbiAgICAncXVuaXRqcycpXG5icm93c2VyQVBJKCh3aW5kb3c6V2luZG93LCBhbHJlYWR5TG9hZGVkOmJvb2xlYW4pOnZvaWQgPT4ge1xuICAgIC8qXG4gICAgICAgIE5PVEU6IFdlIGhhdmUgdG8gZGVmaW5lIHdpbmRvdyBnbG9iYWxseSBiZWZvcmUgalF1ZXJ5IGlzIGxvYWRlZCB0b1xuICAgICAgICBlbnN1cmUgdGhhdCBhbGwganF1ZXJ5IGluc3RhbmNlcyBzaGFyZSB0aGUgc2FtZSB3aW5kb3cgb2JqZWN0LlxuICAgICovXG4gICAgaWYgKHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnICYmIGdsb2JhbCAhPT0gd2luZG93KSB7XG4gICAgICAgIGdsb2JhbC53aW5kb3cgPSB3aW5kb3dcbiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gd2luZG93KVxuICAgICAgICAgICAgaWYgKHdpbmRvdy5oYXNPd25Qcm9wZXJ0eShrZXkpICYmICFnbG9iYWwuaGFzT3duUHJvcGVydHkoa2V5KSlcbiAgICAgICAgICAgICAgICBnbG9iYWxba2V5XSA9IHdpbmRvd1trZXldXG4gICAgfVxuICAgIGNvbnN0ICQ6SlF1ZXJ5RnVuY3Rpb24gPSByZXF1aXJlKCdqcXVlcnknKVxuICAgICQuY29udGV4dCA9IHdpbmRvdy5kb2N1bWVudFxuICAgIHJlcXVpcmUoJy4vaW5kZXgnKVxuICAgIGlmIChUQVJHRVQgPT09ICdub2RlJylcbiAgICAgICAgcXVuaXQubG9hZCgpXG4gICAgZWxzZSBpZiAoIWFscmVhZHlMb2FkZWQpXG4gICAgICAgIHF1bml0LnN0YXJ0KClcbiAgICAvLyByZWdpb24gdGVzdHNcbiAgICAvLyAvIHJlZ2lvbiBtb2NrLXVwXG4gICAgY29uc3Qgd2Vic2l0ZTpXZWJzaXRlID0gJC5XZWJzaXRlKClcbiAgICAvLyAvIGVuZHJlZ2lvblxuICAgIC8vIC8gcmVnaW9uIHB1YmxpYyBtZXRob2RzXG4gICAgLy8gLy8gcmVnaW9uIHNwZWNpYWxcbiAgICBxdW5pdC50ZXN0KCdpbml0aWFsaXplJywgKCk6dm9pZCA9PiBxdW5pdC5vayh3ZWJzaXRlKSlcbiAgICAvLyAvLyBlbmRyZWdpb25cbiAgICBxdW5pdC50ZXN0KCdkaXNhYmxlU2Nyb2xsaW5nfGVuYWJsZVNjcm9sbGluZycsICgpOnZvaWQgPT4ge1xuICAgICAgICBxdW5pdC5zdHJpY3RFcXVhbCh3ZWJzaXRlLmRpc2FibGVTY3JvbGxpbmcoKSwgd2Vic2l0ZSlcbiAgICAgICAgcXVuaXQuc3RyaWN0RXF1YWwod2Vic2l0ZS5lbmFibGVTY3JvbGxpbmcoKSwgd2Vic2l0ZSlcbiAgICB9KVxuICAgIC8vIC8gZW5kcmVnaW9uXG4gICAgLy8gLyByZWdpb24gcHJvdGVjdGVkIG1ldGhvZHNcbiAgICAvLyAvLyByZWdpb24gZXZlbnRcbiAgICBxdW5pdC50ZXN0KCdfb25WaWV3cG9ydE1vdmVzVG9Ub3AnLCAoKTp2b2lkID0+IHtcbiAgICAgICAgd2Vic2l0ZS5fb25WaWV3cG9ydE1vdmVzVG9Ub3AoKVxuICAgICAgICAvLyBOT1RFOiBSZXR1cm5zIHRpbWVvdXQgaWQgYmVjYXVzZSBvZiBkZWJvdW5jZWluZy5cbiAgICAgICAgcXVuaXQuc3RyaWN0RXF1YWwoXG4gICAgICAgICAgICB0eXBlb2Ygd2Vic2l0ZS5fb25WaWV3cG9ydE1vdmVzVG9Ub3AoKSxcbiAgICAgICAgICAgIHR5cGVvZiBzZXRUaW1lb3V0KCgpOnZvaWQgPT4ge30sIDApKVxuICAgIH0pXG4gICAgcXVuaXQudGVzdCgnX29uVmlld3BvcnRNb3Zlc0F3YXlGcm9tVG9wJywgKCk6dm9pZCA9PiB7XG4gICAgICAgIHdlYnNpdGUuX29uVmlld3BvcnRNb3Zlc0F3YXlGcm9tVG9wKClcbiAgICAgICAgLy8gTk9URTogUmV0dXJucyB0aW1lb3V0IGlkIGJlY2F1c2Ugb2YgZGVib3VuY2VpbmcuXG4gICAgICAgIHF1bml0LnN0cmljdEVxdWFsKFxuICAgICAgICAgICAgdHlwZW9mIHdlYnNpdGUuX29uVmlld3BvcnRNb3Zlc0F3YXlGcm9tVG9wKCksXG4gICAgICAgICAgICB0eXBlb2Ygc2V0VGltZW91dCgoKTp2b2lkID0+IHt9LCAwKSlcbiAgICB9KVxuICAgIHF1bml0LnRlc3QoJ19vbkNoYW5nZU1lZGlhUXVlcnlNb2RlJywgKCk6dm9pZCA9PiBxdW5pdC5zdHJpY3RFcXVhbChcbiAgICAgICAgd2Vic2l0ZS5fb25DaGFuZ2VNZWRpYVF1ZXJ5TW9kZSgnb2xkJywgJ25ldycpLCB3ZWJzaXRlKSlcbiAgICBxdW5pdC50ZXN0KCdfb25DaGFuZ2VUb0xhcmdlTW9kZScsICgpOnZvaWQgPT4gcXVuaXQuc3RyaWN0RXF1YWwoXG4gICAgICAgIHdlYnNpdGUuX29uQ2hhbmdlVG9MYXJnZU1vZGUoJ29sZCcsICduZXcnKSwgd2Vic2l0ZSkpXG4gICAgcXVuaXQudGVzdCgnX29uQ2hhbmdlVG9NZWRpdW1Nb2RlJywgKCk6dm9pZCA9PiBxdW5pdC5zdHJpY3RFcXVhbChcbiAgICAgICAgd2Vic2l0ZS5fb25DaGFuZ2VUb01lZGl1bU1vZGUoJ29sZCcsICduZXcnKSwgd2Vic2l0ZSkpXG4gICAgcXVuaXQudGVzdCgnX29uQ2hhbmdlVG9TbWFsbE1vZGUnLCAoKTp2b2lkID0+IHF1bml0LnN0cmljdEVxdWFsKFxuICAgICAgICB3ZWJzaXRlLl9vbkNoYW5nZVRvU21hbGxNb2RlKCdvbGQnLCAnbmV3JyksIHdlYnNpdGUpKVxuICAgIHF1bml0LnRlc3QoJ19vbkNoYW5nZVRvRXh0cmFTbWFsbE1vZGUnLCAoKTp2b2lkID0+IHF1bml0LnN0cmljdEVxdWFsKFxuICAgICAgICB3ZWJzaXRlLl9vbkNoYW5nZVRvRXh0cmFTbWFsbE1vZGUoJ29sZCcsICduZXcnKSwgd2Vic2l0ZSkpXG4gICAgcXVuaXQudGVzdCgnX29uU3dpdGNoU2VjdGlvbicsICgpOnZvaWQgPT4gcXVuaXQuc3RyaWN0RXF1YWwoXG4gICAgICAgIHdlYnNpdGUuX29uU3dpdGNoU2VjdGlvbignbmV3U2VjdGlvbk5hbWUnKSwgd2Vic2l0ZSkpXG4gICAgcXVuaXQudGVzdCgnX29uU3RhcnRVcEFuaW1hdGlvbkNvbXBsZXRlJywgKCk6dm9pZCA9PiBxdW5pdC5zdHJpY3RFcXVhbChcbiAgICAgICAgd2Vic2l0ZS5fb25TdGFydFVwQW5pbWF0aW9uQ29tcGxldGUoKSwgd2Vic2l0ZSkpXG4gICAgLy8gLy8gZW5kcmVnaW9uXG4gICAgLy8gLy8gcmVnaW9uIGhlbHBlclxuICAgIHF1bml0LnRlc3QoJ19hZGRNZWRpYVF1ZXJ5Q2hhbmdlRXZlbnRzJywgKCk6dm9pZCA9PiBxdW5pdC5zdHJpY3RFcXVhbChcbiAgICAgICAgd2Vic2l0ZS5fYWRkTWVkaWFRdWVyeUNoYW5nZUV2ZW50cygpLCB3ZWJzaXRlKSlcbiAgICBxdW5pdC50ZXN0KCdfdHJpZ2dlcldpbmRvd1Jlc2l6ZUV2ZW50cycsICgpOnZvaWQgPT4gcXVuaXQuc3RyaWN0RXF1YWwoXG4gICAgICAgIHdlYnNpdGUuX3RyaWdnZXJXaW5kb3dSZXNpemVFdmVudHMoKSwgd2Vic2l0ZSkpXG4gICAgcXVuaXQudGVzdCgnX2JpbmRTY3JvbGxFdmVudHMnLCAoKTp2b2lkID0+IHF1bml0LnN0cmljdEVxdWFsKFxuICAgICAgICB3ZWJzaXRlLl9iaW5kU2Nyb2xsRXZlbnRzKCksIHdlYnNpdGUpKVxuICAgIHF1bml0LnRlc3QoJ19yZW1vdmVMb2FkaW5nQ292ZXInLCAoKTp2b2lkID0+IHF1bml0LnN0cmljdEVxdWFsKFxuICAgICAgICB3ZWJzaXRlLl9yZW1vdmVMb2FkaW5nQ292ZXIoKSwgd2Vic2l0ZSkpXG4gICAgcXVuaXQudGVzdCgnX2hhbmRsZVN0YXJ0VXBFZmZlY3RzJywgKCk6dm9pZCA9PiBxdW5pdC5zdHJpY3RFcXVhbChcbiAgICAgICAgd2Vic2l0ZS5faGFuZGxlU3RhcnRVcEVmZmVjdHMoMTApLCB3ZWJzaXRlKSlcbiAgICBxdW5pdC50ZXN0KCdfYWRkTmF2aWdhdGlvbkV2ZW50cycsICgpOnZvaWQgPT4gcXVuaXQuc3RyaWN0RXF1YWwoXG4gICAgICAgIHdlYnNpdGUuX2FkZE5hdmlnYXRpb25FdmVudHMoKSwgd2Vic2l0ZSkpXG4gICAgcXVuaXQudGVzdCgnX2hhbmRsZVNjcm9sbFRvVG9wQnV0dG9uJywgKCk6dm9pZCA9PiBxdW5pdC5zdHJpY3RFcXVhbChcbiAgICAgICAgd2Vic2l0ZS5faGFuZGxlU2Nyb2xsVG9Ub3BCdXR0b24oKSwgd2Vic2l0ZSkpXG4gICAgcXVuaXQudGVzdCgnX3Njcm9sbFRvVG9wJywgKCk6dm9pZCA9PiBxdW5pdC5zdHJpY3RFcXVhbChcbiAgICAgICAgd2Vic2l0ZS5fc2Nyb2xsVG9Ub3AoKSwgd2Vic2l0ZSkpXG4gICAgcXVuaXQudGVzdCgnX2hhbmRsZUFuYWx5dGljc0luaXRpYWxpc2F0aW9uJywgKCk6dm9pZCA9PiBxdW5pdC5zdHJpY3RFcXVhbChcbiAgICAgICAgd2Vic2l0ZS5faGFuZGxlQW5hbHl0aWNzSW5pdGlhbGlzYXRpb24oKSwgd2Vic2l0ZSkpXG4gICAgLy8gLy8gZW5kcmVnaW9uXG4gICAgLy8gLyBlbmRyZWdpb25cbiAgICAvLyBlbmRyZWdpb25cbiAgICAvLyByZWdpb24gaG90IG1vZHVsZSByZXBsYWNlbWVudCBoYW5kbGVyXG4gICAgaWYgKHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnICYmICdob3QnIGluIG1vZHVsZSAmJiBtb2R1bGUuaG90KSB7XG4gICAgICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICAgICAgLy8gSWdub3JlVHlwZUNoZWNrXG4gICAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZSgoKTp2b2lkID0+IHtcbiAgICAgICAgICAgIC8qXG4gICAgICAgICAgICAgICAgTk9URTogV2UgaGF2ZSB0byBkZWxheSBzdGF0dXMgaW5kaWNhdG9yIHJlc2V0IGJlY2F1c2UgcXVuaXRzXG4gICAgICAgICAgICAgICAgc3RhdHVzIHVwZGF0ZXMgYXJlIGRlbGF5ZWQgYXMgd2VsbC5cbiAgICAgICAgICAgICovXG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpOnZvaWQgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghJCgnLmZhaWwnKS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LmRvY3VtZW50LnRpdGxlID0gJ+KclCB0ZXN0J1xuICAgICAgICAgICAgICAgICAgICAkKCcjcXVuaXQtYmFubmVyJykucmVtb3ZlQ2xhc3MoJ3F1bml0LWZhaWwnKS5hZGRDbGFzcyhcbiAgICAgICAgICAgICAgICAgICAgICAgICdxdW5pdC1wYXNzJylcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCAwKVxuICAgICAgICAgICAgJCgnI3F1bml0LXRlc3RzJykuaHRtbCgnJylcbiAgICAgICAgICAgIGNvbnNvbGUuY2xlYXIoKVxuICAgICAgICB9KVxuICAgIH1cbiAgICAvLyBlbmRyZWdpb25cbn0pXG4vLyByZWdpb24gdmltIG1vZGxpbmVcbi8vIHZpbTogc2V0IHRhYnN0b3A9NCBzaGlmdHdpZHRoPTQgZXhwYW5kdGFiOlxuLy8gdmltOiBmb2xkbWV0aG9kPW1hcmtlciBmb2xkbWFya2VyPXJlZ2lvbixlbmRyZWdpb246XG4vLyBlbmRyZWdpb25cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHRlc3QuanNcbiAqKi8iXSwibWFwcGluZ3MiOiI7O0FBR0E7Ozs7Ozs7Ozs7OztBQWNBOzs7OztBQVVBOzs7QUFPQTs7QUFlQTs7O0FBSUE7QUFFQTs7O0FBT0E7QUFHQTtBQU9BOztBQW9CQTs7OztBQXNCQTtBQUdBOzs7QUFLQTtBQVlBOzs7OyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 5 */
/*!***********************************************!*\
  !*** ./~/webOptimizer/browserAPI.compiled.js ***!
  \***********************************************/
/***/ function(module, exports, __webpack_require__) {

	eval("// #!/usr/bin/env node\n\n// -*- coding: utf-8 -*-\n'use strict';\n/* !\n    region header\n    Copyright Torben Sickert (info[\"~at~\"]torben.website) 16.12.2012\n\n    License\n    -------\n\n    This library written by Torben Sickert stand under a creative commons naming\n    3.0 unported license. see http://creativecommons.org/licenses/by/3.0/deed.de\n    endregion\n*/\n// region imports\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\n// endregion\n// region constants\n\n// endregion\n// region declaration\nconst onDomContentLoadedListener = [];\n// endregion\n// region functions\nlet windowWithLoadedDomContent = null;\nconst onDomContentLoaded = window => {\n    windowWithLoadedDomContent = window;\n    for (const callback of onDomContentLoadedListener) callback(window, false);\n};\n// endregion\n// region ensure presence of common browser environment\nif (true) {\n    // region mock browser environment\n    const dom = __webpack_require__(/*! jsdom */ 10);\n    dom.env(`\n    <!doctype html>\n        <html>\n            <head>\n                <meta charset=\"UTF-8\">\n                <!--Prevent browser caching-->\n                <meta http-equiv=\"cache-control\" content=\"no-cache\">\n                <meta http-equiv=\"expires\" content=\"0\">\n                <meta http-equiv=\"pragma\" content=\"no-cache\">\n                <title>test</title>\n                <link\n                    href=\"/node_modules/qunitjs/qunit/qunit.css\"\n                    rel=\"stylesheet\" type=\"text/css\"\n                >\n            </head>\n        <body>\n            <div id=\"qunit\"></div>\n            <div id=\"qunit-fixture\"></div>\n        </body>\n    </html>\n    `, (error, window) => {\n        if (error) throw error;else {\n            Object.defineProperty(window, 'location', {\n                value: {\n                    hash: '',\n                    search: '',\n                    pathname: '/path',\n                    port: '',\n                    hostname: 'localhost',\n                    host: 'localhost',\n                    protocol: 'http:',\n                    origin: 'http://localhost',\n                    href: 'http://localhost/path',\n                    username: '',\n                    password: '',\n                    assign: () => {},\n                    reload: () => {},\n                    replace: () => {},\n                    toString: function () {\n                        return this.href;\n                    }\n                },\n                writable: false\n            });\n            onDomContentLoaded(window);\n        }\n    });\n    // endregion\n} else window.document.addEventListener('DOMContentLoaded', () => {\n        onDomContentLoaded(window);\n    });\n// endregion\n\nexports.default = callback => {\n    if (windowWithLoadedDomContent) callback(windowWithLoadedDomContent, true);else onDomContentLoadedListener.push(callback);\n};\n// region vim modline\n// vim: set tabstop=4 shiftwidth=4 expandtab:\n// vim: foldmethod=marker foldmarker=region,endregion:\n// endregion\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJyb3dzZXJBUEkuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBOzs7Ozs7Ozs7OztBQVdBOzs7Ozs7QUFNQTtBQUNBOztBQUxDO0FBQ0Q7QUFLQSxNQUFNLDZCQUF1RSxFQUE3RTtBQUNBO0FBQ0E7QUFDQSxJQUFJLDZCQUFxQyxJQUF6QztBQUNBLE1BQU0scUJBQXNCLE1BQUQsSUFBd0I7QUFDL0MsaUNBQTZCLE1BQTdCO0FBQ0EsU0FDSSxNQUFNLFFBRFYsSUFFSSwwQkFGSixFQUlJLFNBQVMsTUFBVCxFQUFpQixLQUFqQjtBQUNQLENBUEQ7QUFRQTtBQUNBO0FBQ0EsSUFBSSxPQUFPLE1BQVAsS0FBa0IsV0FBbEIsSUFBaUMsV0FBVyxNQUFoRCxFQUF3RDtBQUNwRDtBQUNBLFVBQU0sTUFBTSxRQUFRLE9BQVIsQ0FBWjtBQUNBLFFBQUksR0FBSixDQUFTOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQUFULEVBb0JHLENBQUMsS0FBRCxFQUFlLE1BQWYsS0FBc0M7QUFDckMsWUFBSSxLQUFKLEVBQ0ksTUFBTSxLQUFOLENBREosS0FFSztBQUNELG1CQUFPLGNBQVAsQ0FBc0IsTUFBdEIsRUFBOEIsVUFBOUIsRUFBMEM7QUFDdEMsdUJBQU87QUFDSCwwQkFBTSxFQURIO0FBRUgsNEJBQVEsRUFGTDtBQUdILDhCQUFVLE9BSFA7QUFJSCwwQkFBTSxFQUpIO0FBS0gsOEJBQVUsV0FMUDtBQU1ILDBCQUFNLFdBTkg7QUFPSCw4QkFBVSxPQVBQO0FBUUgsNEJBQVEsa0JBUkw7QUFTSCwwQkFBTSx1QkFUSDtBQVVILDhCQUFVLEVBVlA7QUFXSCw4QkFBVSxFQVhQO0FBWUgsNEJBQVEsTUFBVyxDQUFFLENBWmxCO0FBYUgsNEJBQVEsTUFBVyxDQUFFLENBYmxCO0FBY0gsNkJBQVMsTUFBVyxDQUFFLENBZG5CO0FBZUgsOEJBQVUsWUFBa0I7QUFDeEIsK0JBQU8sS0FBSyxJQUFaO0FBQ0g7QUFqQkUsaUJBRCtCO0FBb0J0QywwQkFBVTtBQXBCNEIsYUFBMUM7QUFzQkEsK0JBQW1CLE1BQW5CO0FBQ0g7QUFDSixLQWhERDtBQWlEQTtBQUNILENBckRELE1Bc0RJLE9BQU8sUUFBUCxDQUFnQixnQkFBaEIsQ0FBaUMsa0JBQWpDLEVBQXFELE1BQVc7QUFDNUQsMkJBQW1CLE1BQW5CO0FBQ0gsS0FGRDtBQUdKOztrQkFFSSxRQURXLElBRUw7QUFDTixRQUFJLDBCQUFKLEVBQ0ksU0FBUywwQkFBVCxFQUFxQyxJQUFyQyxFQURKLEtBR0ksMkJBQTJCLElBQTNCLENBQWdDLFFBQWhDO0FBQ1AsQztBQUNEO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImJyb3dzZXJBUEkuY29tcGlsZWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyAjIS91c3IvYmluL2VudiBub2RlXG4vLyBAZmxvd1xuLy8gLSotIGNvZGluZzogdXRmLTggLSotXG4ndXNlIHN0cmljdCdcbi8qICFcbiAgICByZWdpb24gaGVhZGVyXG4gICAgQ29weXJpZ2h0IFRvcmJlbiBTaWNrZXJ0IChpbmZvW1wifmF0flwiXXRvcmJlbi53ZWJzaXRlKSAxNi4xMi4yMDEyXG5cbiAgICBMaWNlbnNlXG4gICAgLS0tLS0tLVxuXG4gICAgVGhpcyBsaWJyYXJ5IHdyaXR0ZW4gYnkgVG9yYmVuIFNpY2tlcnQgc3RhbmQgdW5kZXIgYSBjcmVhdGl2ZSBjb21tb25zIG5hbWluZ1xuICAgIDMuMCB1bnBvcnRlZCBsaWNlbnNlLiBzZWUgaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnkvMy4wL2RlZWQuZGVcbiAgICBlbmRyZWdpb25cbiovXG4vLyByZWdpb24gaW1wb3J0c1xuaW1wb3J0IHR5cGUge09uRG9tQ29udGVudExvYWRlZExpc3RlbmVyRnVuY3Rpb24sIFdpbmRvd30gZnJvbSAnLi90eXBlJ1xuIC8vIGVuZHJlZ2lvblxuLy8gcmVnaW9uIGRlY2xhcmF0aW9uXG5kZWNsYXJlIHZhciBUQVJHRVQ6c3RyaW5nXG5kZWNsYXJlIHZhciB3aW5kb3c6V2luZG93XG4vLyBlbmRyZWdpb25cbi8vIHJlZ2lvbiBjb25zdGFudHNcbmNvbnN0IG9uRG9tQ29udGVudExvYWRlZExpc3RlbmVyOkFycmF5PE9uRG9tQ29udGVudExvYWRlZExpc3RlbmVyRnVuY3Rpb24+ID0gW11cbi8vIGVuZHJlZ2lvblxuLy8gcmVnaW9uIGZ1bmN0aW9uc1xubGV0IHdpbmRvd1dpdGhMb2FkZWREb21Db250ZW50Oj9XaW5kb3cgPSBudWxsXG5jb25zdCBvbkRvbUNvbnRlbnRMb2FkZWQgPSAod2luZG93OldpbmRvdyk6dm9pZCA9PiB7XG4gICAgd2luZG93V2l0aExvYWRlZERvbUNvbnRlbnQgPSB3aW5kb3dcbiAgICBmb3IgKFxuICAgICAgICBjb25zdCBjYWxsYmFjazpPbkRvbUNvbnRlbnRMb2FkZWRMaXN0ZW5lckZ1bmN0aW9uIG9mXG4gICAgICAgIG9uRG9tQ29udGVudExvYWRlZExpc3RlbmVyXG4gICAgKVxuICAgICAgICBjYWxsYmFjayh3aW5kb3csIGZhbHNlKVxufVxuLy8gZW5kcmVnaW9uXG4vLyByZWdpb24gZW5zdXJlIHByZXNlbmNlIG9mIGNvbW1vbiBicm93c2VyIGVudmlyb25tZW50XG5pZiAodHlwZW9mIFRBUkdFVCA9PT0gJ3VuZGVmaW5lZCcgfHwgVEFSR0VUID09PSAnbm9kZScpIHtcbiAgICAvLyByZWdpb24gbW9jayBicm93c2VyIGVudmlyb25tZW50XG4gICAgY29uc3QgZG9tID0gcmVxdWlyZSgnanNkb20nKVxuICAgIGRvbS5lbnYoYFxuICAgIDwhZG9jdHlwZSBodG1sPlxuICAgICAgICA8aHRtbD5cbiAgICAgICAgICAgIDxoZWFkPlxuICAgICAgICAgICAgICAgIDxtZXRhIGNoYXJzZXQ9XCJVVEYtOFwiPlxuICAgICAgICAgICAgICAgIDwhLS1QcmV2ZW50IGJyb3dzZXIgY2FjaGluZy0tPlxuICAgICAgICAgICAgICAgIDxtZXRhIGh0dHAtZXF1aXY9XCJjYWNoZS1jb250cm9sXCIgY29udGVudD1cIm5vLWNhY2hlXCI+XG4gICAgICAgICAgICAgICAgPG1ldGEgaHR0cC1lcXVpdj1cImV4cGlyZXNcIiBjb250ZW50PVwiMFwiPlxuICAgICAgICAgICAgICAgIDxtZXRhIGh0dHAtZXF1aXY9XCJwcmFnbWFcIiBjb250ZW50PVwibm8tY2FjaGVcIj5cbiAgICAgICAgICAgICAgICA8dGl0bGU+dGVzdDwvdGl0bGU+XG4gICAgICAgICAgICAgICAgPGxpbmtcbiAgICAgICAgICAgICAgICAgICAgaHJlZj1cIi9ub2RlX21vZHVsZXMvcXVuaXRqcy9xdW5pdC9xdW5pdC5jc3NcIlxuICAgICAgICAgICAgICAgICAgICByZWw9XCJzdHlsZXNoZWV0XCIgdHlwZT1cInRleHQvY3NzXCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICA8L2hlYWQ+XG4gICAgICAgIDxib2R5PlxuICAgICAgICAgICAgPGRpdiBpZD1cInF1bml0XCI+PC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGlkPVwicXVuaXQtZml4dHVyZVwiPjwvZGl2PlxuICAgICAgICA8L2JvZHk+XG4gICAgPC9odG1sPlxuICAgIGAsIChlcnJvcjo/RXJyb3IsIHdpbmRvdzpPYmplY3QpOnZvaWQgPT4ge1xuICAgICAgICBpZiAoZXJyb3IpXG4gICAgICAgICAgICB0aHJvdyBlcnJvclxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3aW5kb3csICdsb2NhdGlvbicsIHtcbiAgICAgICAgICAgICAgICB2YWx1ZToge1xuICAgICAgICAgICAgICAgICAgICBoYXNoOiAnJyxcbiAgICAgICAgICAgICAgICAgICAgc2VhcmNoOiAnJyxcbiAgICAgICAgICAgICAgICAgICAgcGF0aG5hbWU6ICcvcGF0aCcsXG4gICAgICAgICAgICAgICAgICAgIHBvcnQ6ICcnLFxuICAgICAgICAgICAgICAgICAgICBob3N0bmFtZTogJ2xvY2FsaG9zdCcsXG4gICAgICAgICAgICAgICAgICAgIGhvc3Q6ICdsb2NhbGhvc3QnLFxuICAgICAgICAgICAgICAgICAgICBwcm90b2NvbDogJ2h0dHA6JyxcbiAgICAgICAgICAgICAgICAgICAgb3JpZ2luOiAnaHR0cDovL2xvY2FsaG9zdCcsXG4gICAgICAgICAgICAgICAgICAgIGhyZWY6ICdodHRwOi8vbG9jYWxob3N0L3BhdGgnLFxuICAgICAgICAgICAgICAgICAgICB1c2VybmFtZTogJycsXG4gICAgICAgICAgICAgICAgICAgIHBhc3N3b3JkOiAnJyxcbiAgICAgICAgICAgICAgICAgICAgYXNzaWduOiAoKTp2b2lkID0+IHt9LFxuICAgICAgICAgICAgICAgICAgICByZWxvYWQ6ICgpOnZvaWQgPT4ge30sXG4gICAgICAgICAgICAgICAgICAgIHJlcGxhY2U6ICgpOnZvaWQgPT4ge30sXG4gICAgICAgICAgICAgICAgICAgIHRvU3RyaW5nOiBmdW5jdGlvbigpOnN0cmluZyB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5ocmVmXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHdyaXRhYmxlOiBmYWxzZVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIG9uRG9tQ29udGVudExvYWRlZCh3aW5kb3cpXG4gICAgICAgIH1cbiAgICB9KVxuICAgIC8vIGVuZHJlZ2lvblxufSBlbHNlXG4gICAgd2luZG93LmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKTp2b2lkID0+IHtcbiAgICAgICAgb25Eb21Db250ZW50TG9hZGVkKHdpbmRvdylcbiAgICB9KVxuLy8gZW5kcmVnaW9uXG5leHBvcnQgZGVmYXVsdCAoXG4gICAgY2FsbGJhY2s6T25Eb21Db250ZW50TG9hZGVkTGlzdGVuZXJGdW5jdGlvblxuKTp2b2lkID0+IHtcbiAgICBpZiAod2luZG93V2l0aExvYWRlZERvbUNvbnRlbnQpXG4gICAgICAgIGNhbGxiYWNrKHdpbmRvd1dpdGhMb2FkZWREb21Db250ZW50LCB0cnVlKVxuICAgIGVsc2VcbiAgICAgICAgb25Eb21Db250ZW50TG9hZGVkTGlzdGVuZXIucHVzaChjYWxsYmFjaylcbn1cbi8vIHJlZ2lvbiB2aW0gbW9kbGluZVxuLy8gdmltOiBzZXQgdGFic3RvcD00IHNoaWZ0d2lkdGg9NCBleHBhbmR0YWI6XG4vLyB2aW06IGZvbGRtZXRob2Q9bWFya2VyIGZvbGRtYXJrZXI9cmVnaW9uLGVuZHJlZ2lvbjpcbi8vIGVuZHJlZ2lvblxuIl19\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 6 */
/*!******************************!*\
  !*** external "jQuery-lang" ***!
  \******************************/
/***/ function(module, exports) {

	eval("module.exports = require(\"jQuery-lang\");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCBcImpRdWVyeS1sYW5nXCI/MzdkMyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJqUXVlcnktbGFuZ1wiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwialF1ZXJ5LWxhbmdcIlxuICoqIG1vZHVsZSBpZCA9IDZcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 7 */
/*!**********************************!*\
  !*** external "jQuery-scrollTo" ***!
  \**********************************/
/***/ function(module, exports) {

	eval("module.exports = require(\"jQuery-scrollTo\");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCBcImpRdWVyeS1zY3JvbGxUb1wiP2RlNjEiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwialF1ZXJ5LXNjcm9sbFRvXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJqUXVlcnktc2Nyb2xsVG9cIlxuICoqIG1vZHVsZSBpZCA9IDdcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 8 */
/*!******************************!*\
  !*** external "jQuery-spin" ***!
  \******************************/
/***/ function(module, exports) {

	eval("module.exports = require(\"jQuery-spin\");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCBcImpRdWVyeS1zcGluXCI/Mzc0YyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJqUXVlcnktc3BpblwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwialF1ZXJ5LXNwaW5cIlxuICoqIG1vZHVsZSBpZCA9IDhcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 9 */
/*!*******************************!*\
  !*** external "jQuery-tools" ***!
  \*******************************/
/***/ function(module, exports) {

	eval("module.exports = require(\"jQuery-tools\");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCBcImpRdWVyeS10b29sc1wiPzRiYTQiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwialF1ZXJ5LXRvb2xzXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJqUXVlcnktdG9vbHNcIlxuICoqIG1vZHVsZSBpZCA9IDlcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 10 */
/*!************************!*\
  !*** external "jsdom" ***!
  \************************/
/***/ function(module, exports) {

	eval("module.exports = require(\"jsdom\");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJqc2RvbVwiPzQ4N2IiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwianNkb21cIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcImpzZG9tXCJcbiAqKiBtb2R1bGUgaWQgPSAxMFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 11 */
/*!****************************!*\
  !*** external "qunit-cli" ***!
  \****************************/
/***/ function(module, exports) {

	eval("module.exports = require(\"qunit-cli\");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJxdW5pdC1jbGlcIj82MTU0Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInF1bml0LWNsaVwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwicXVuaXQtY2xpXCJcbiAqKiBtb2R1bGUgaWQgPSAxMVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }
/******/ ]);